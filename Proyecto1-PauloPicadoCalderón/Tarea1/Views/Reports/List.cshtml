@model Tarea1.Models.Report.ReportesViewModel

@{
    ViewData["Title"] = "List";
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

<section class="contenedor">
    <div class="text-center mb-4">
        <h1 class="display-4">Reportes de Clientes</h1>
        <p class="h3 mt-3 mt-3 ">Aquí puedes ver los reportes de clientes que requieren agendar mantenimiento próximamente o aquellos que no han tenido mantenimiento en más de dos meses.</p>
    </div>
    @if (Model.ProximosServicios.Count == 0 && Model.ClientesSinServicios.Count == 0)
    {
        <div class="alert alert-warning" role="alert">
            No hay reportes que generar
        </div>
    }
    else
    {
        <div class="row">
            <!-- Reporte de clientes próximos a contactar -->
            <div class="col-md-6 mb-4 d-flex">
                <div class="card shadow flex-fill">
                    <div class="card-header bg-primary text-white text-center">
                        Clientes próximos a contactar
                    </div>
                    <div class="card-body d-flex flex-column">
                        <table id="tableProximos" class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Nombre Completo</th>
                                    <th>Fecha Programada</th>
                                    <th>Dirección</th>
                                    <th>Estado</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var servicio in Model.ProximosServicios)
                                {
                                    <tr>
                                        <td>@servicio.ClientName</td>
                                        <td>@servicio.ScheduledDate.ToShortDateString()</td>
                                        <td>@servicio.Address</td>
                                        @if (servicio.Status == "1")
                                        {
                                            <td>Facturado</td>
                                        }
                                        else if (servicio.Status == "2")
                                        {
                                            <td>Agendado</td>
                                        }
                                        else if (servicio.Status == "3")
                                        {
                                            <td>En Proceso</td>
                                        }
                                        else
                                        {
                                            <td>Finalizado</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="text-center mt-auto">
                            <button class="btn btn-secondary mt-3 btn-lg" onclick="exportarTabla('tableProximos', 'ProximosServicios.pdf', 'Clientes próximos a contactar')">Exportar</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Reporte de clientes sin mantenimiento reciente -->
            <div class="col-md-6 mb-4 d-flex">
                <div class="card shadow flex-fill">
                    <div class="card-header bg-secondary text-white text-center">
                        Clientes sin mantenimiento reciente
                    </div>
                    <div class="card-body d-flex flex-column">
                        <table id="tableSinMantenimiento" class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Nombre Cliente</th>
                                    <th>Último Mantenimiento</th>
                                    <th>Dirección</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var cliente in Model.ClientesSinServicios)
                                {
                                    <tr>
                                        <td>@cliente.ClientName</td>
                                        <td>@cliente.LastMaintenanceDate.ToShortDateString()</td>
                                        <td>@cliente.Address</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="text-center mt-auto">
                            <button class="btn btn-secondary mt-3 btn-lg" onclick="exportarTabla('tableSinMantenimiento', 'ClientesSinMantenimiento.pdf', 'Clientes sin mantenimiento reciente')">Exportar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script>

<script>
    $(document).ready(function () {
        $('#tableProximos').DataTable({

            language: {
                url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-ES.json'
            },
            order: [[1, 'asc']], // Ordenar por la columna de la fecha programada (índice 1) en orden ascendente
            searching: false
        });

        $('#tableSinMantenimiento').DataTable({
            language: {
                url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-ES.json'
            },
            order: [[1, 'asc']], // Ordenar por la columna de la fecha de último mantenimiento (índice 1) en orden descendente
            searching: false
        });
    });

    async function exportarTabla(tablaId, nombreArchivo, titulo) {
        const { jsPDF } = window.jspdf;

        // Crear una nueva instancia de jsPDF
        const pdf = new jsPDF({
            orientation: 'landscape', // 'portrait' o 'landscape'
            unit: 'mm', // Unidades de medida
            format: 'a4', // Formato de la página
            putOnlyUsedFonts: true,
            floatPrecision: 16, // Precisión de los flotantes
        });

        // Añadir el título al PDF
        pdf.text(titulo, 14, 20);

        // Obtener la tabla de DataTables
        const tabla = $(`#${tablaId}`).DataTable();
        const encabezados = [];
        const datos = [];

        // Obtener los encabezados de la tabla
        tabla.columns().header().each(function (header) {
            encabezados.push($(header).text());
        });

        // Obtener los datos de la tabla
        tabla.rows().every(function (rowIdx, tableLoop, rowLoop) {
            const fila = [];
            this.data().forEach(function (cell) {
                fila.push(cell);
            });
            datos.push(fila);
        });

        // Añadir la tabla al PDF
        pdf.autoTable({
            head: [encabezados],
            body: datos,
            startY: 30,
        });

        // Guardar el PDF
        pdf.save(nombreArchivo);
    }
</script>
